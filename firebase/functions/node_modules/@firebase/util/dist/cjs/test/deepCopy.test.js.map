{"version":3,"sources":["../test/deepCopy.test.ts"],"names":[],"mappings":"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","file":"deepCopy.test.js","sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assert } from 'chai';\nimport { deepCopy, deepExtend } from '../src/deepCopy';\n\ndescribe('deepCopy()', () => {\n  it('Scalars', () => {\n    assert.strictEqual(deepCopy(true), true);\n    assert.strictEqual(deepCopy(123), 123);\n    assert.strictEqual(deepCopy('abc'), 'abc');\n  });\n\n  it('Date', () => {\n    let d = new Date();\n    assert.deepEqual(deepCopy(d), d);\n  });\n\n  it('Object', () => {\n    assert.deepEqual(deepCopy({}), {});\n    assert.deepEqual(deepCopy({ a: 123 }), { a: 123 });\n    assert.deepEqual(deepCopy({ a: { b: 123 } }), { a: { b: 123 } });\n  });\n\n  it('Array', () => {\n    assert.deepEqual(deepCopy([]), []);\n    assert.deepEqual(deepCopy([123, 456]), [123, 456]);\n    assert.deepEqual(deepCopy([123, [456]]), [123, [456]]);\n  });\n});\n\ndescribe('deepExtend', () => {\n  it('Scalars', () => {\n    assert.strictEqual(deepExtend(1, true), true);\n    assert.strictEqual(deepExtend(undefined, 123), 123);\n    assert.strictEqual(deepExtend('was', 'abc'), 'abc');\n  });\n\n  it('Date', () => {\n    let d = new Date();\n    assert.deepEqual(deepExtend(new Date(), d), d);\n  });\n\n  it('Object', () => {\n    assert.deepEqual(deepExtend({ old: 123 }, {}), { old: 123 });\n    assert.deepEqual(deepExtend({ old: 123 }, { s: 'hello' }), {\n      old: 123,\n      s: 'hello'\n    });\n    assert.deepEqual(\n      deepExtend({ old: 123, a: { c: 'in-old' } }, { a: { b: 123 } }),\n      { old: 123, a: { b: 123, c: 'in-old' } }\n    );\n  });\n\n  it('Array', () => {\n    assert.deepEqual(deepExtend([1], []), []);\n    assert.deepEqual(deepExtend([1], [123, 456]), [123, 456]);\n    assert.deepEqual(deepExtend([1], [123, [456]]), [123, [456]]);\n  });\n\n  it('Array is copied - not referenced', () => {\n    let o1 = { a: [1] };\n    let o2 = { a: [2] };\n\n    assert.deepEqual(deepExtend(o1, o2), { a: [2] });\n    o2.a.push(3);\n    assert.deepEqual(o1, { a: [2] });\n  });\n\n  it('Array with undefined elements', () => {\n    let a: any = [];\n    a[3] = '3';\n    let b = deepExtend(undefined, a);\n    assert.deepEqual(b, [, , , '3']);\n  });\n\n  it('Function', () => {\n    let source: any = () => {\n      /*_*/\n    };\n    let target: any = deepExtend(\n      {\n        a: () => {\n          /*_*/\n        }\n      },\n      { a: source }\n    );\n    assert.deepEqual({ a: source }, target);\n    assert.strictEqual(source, target.a);\n  });\n});\n"]}