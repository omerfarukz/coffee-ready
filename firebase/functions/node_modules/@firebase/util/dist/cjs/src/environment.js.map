{"version":3,"sources":["../src/environment.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;AAEH,yCAAwC;AAExC;;;GAGG;AACU,QAAA,KAAK,GAAG;IACnB,EAAE,CAAC,CACD,OAAO,SAAS,KAAK,WAAW;QAChC,OAAO,SAAS,CAAC,WAAW,CAAC,KAAK,QACpC,CAAC,CAAC,CAAC;QACD,MAAM,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;IAChC,CAAC;IAAC,IAAI,CAAC,CAAC;QACN,MAAM,CAAC,EAAE,CAAC;IACZ,CAAC;AACH,CAAC,CAAC;AAEF;;;;;;;GAOG;AACU,QAAA,eAAe,GAAG;IAC7B,MAAM,CAAC,CACL,OAAO,MAAM,KAAK,WAAW;QAC7B,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,MAAM,CAAC,UAAU,CAAC,IAAI,MAAM,CAAC,UAAU,CAAC,CAAC;QACjE,mDAAmD,CAAC,IAAI,CAAC,aAAK,EAAE,CAAC,CAClE,CAAC;AACJ,CAAC,CAAC;AAEF;;;;GAIG;AACU,QAAA,aAAa,GAAG;IAC3B,MAAM,CAAC,CACL,OAAO,SAAS,KAAK,QAAQ,IAAI,SAAS,CAAC,SAAS,CAAC,KAAK,aAAa,CACxE,CAAC;AACJ,CAAC,CAAC;AAEF;;;;GAIG;AACU,QAAA,SAAS,GAAG;IACvB,MAAM,CAAC,qBAAS,CAAC,WAAW,KAAK,IAAI,IAAI,qBAAS,CAAC,UAAU,KAAK,IAAI,CAAC;AACzE,CAAC,CAAC","file":"environment.js","sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\n\n/**\n * Returns navigator.userAgent string or '' if it's not defined.\n * @return {string} user agent string\n */\nexport const getUA = function() {\n  if (\n    typeof navigator !== 'undefined' &&\n    typeof navigator['userAgent'] === 'string'\n  ) {\n    return navigator['userAgent'];\n  } else {\n    return '';\n  }\n};\n\n/**\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\n *\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap in the Ripple emulator) nor\n * Cordova `onDeviceReady`, which would normally wait for a callback.\n *\n * @return {boolean} isMobileCordova\n */\nexport const isMobileCordova = function() {\n  return (\n    typeof window !== 'undefined' &&\n    !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\n    /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA())\n  );\n};\n\n/**\n * Detect React Native.\n *\n * @return {boolean} True if ReactNative environment is detected.\n */\nexport const isReactNative = function() {\n  return (\n    typeof navigator === 'object' && navigator['product'] === 'ReactNative'\n  );\n};\n\n/**\n * Detect Node.js.\n *\n * @return {boolean} True if Node.js environment is detected.\n */\nexport const isNodeSdk = function() {\n  return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\n};\n"]}