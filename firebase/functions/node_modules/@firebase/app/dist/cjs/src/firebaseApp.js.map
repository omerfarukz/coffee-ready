{"version":3,"sources":["dist/cjs/src/firebaseApp.ts"],"names":[],"mappings":"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","file":"firebaseApp.js","sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseNamespace\n} from '@firebase/app-types';\nimport {\n  _FirebaseApp,\n  _FirebaseNamespace,\n  FirebaseService,\n  FirebaseServiceFactory,\n  FirebaseServiceNamespace,\n  AppHook\n} from '@firebase/app-types/private';\nimport {\n  createSubscribe,\n  deepCopy,\n  deepExtend,\n  ErrorFactory,\n  FirebaseError,\n  Observer,\n  patchProperty,\n  Subscribe\n} from '@firebase/util';\n\nconst contains = function(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n};\n\nconst DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\n// An array to capture listeners before the true auth functions\n// exist\nlet tokenListeners = [];\n\n/**\n * Global context object for a collection of services using\n * a shared authentication state.\n */\nclass FirebaseAppImpl implements FirebaseApp {\n  private options_: FirebaseOptions;\n  private name_: string;\n  private isDeleted_ = false;\n  private services_: {\n    [name: string]: {\n      [serviceName: string]: FirebaseService;\n    };\n  } = {};\n\n  public INTERNAL;\n\n  constructor(\n    options: FirebaseOptions,\n    name: string,\n    private firebase_: FirebaseNamespace\n  ) {\n    this.name_ = name;\n    this.options_ = deepCopy<FirebaseOptions>(options);\n    this.INTERNAL = {\n      getUid: () => null,\n      getToken: () => Promise.resolve(null),\n      addAuthTokenListener: (callback: (token: string | null) => void) => {\n        tokenListeners.push(callback);\n        // Make sure callback is called, asynchronously, in the absence of the auth module\n        setTimeout(() => callback(null), 0);\n      },\n      removeAuthTokenListener: callback => {\n        tokenListeners = tokenListeners.filter(\n          listener => listener !== callback\n        );\n      }\n    };\n  }\n\n  get name(): string {\n    this.checkDestroyed_();\n    return this.name_;\n  }\n\n  get options(): FirebaseOptions {\n    this.checkDestroyed_();\n    return this.options_;\n  }\n\n  delete(): Promise<void> {\n    return new Promise(resolve => {\n      this.checkDestroyed_();\n      resolve();\n    })\n      .then(() => {\n        (this.firebase_ as _FirebaseNamespace).INTERNAL.removeApp(this.name_);\n        let services: FirebaseService[] = [];\n        Object.keys(this.services_).forEach(serviceKey => {\n          Object.keys(this.services_[serviceKey]).forEach(instanceKey => {\n            services.push(this.services_[serviceKey][instanceKey]);\n          });\n        });\n        return Promise.all(\n          services.map(service => {\n            return service.INTERNAL!.delete();\n          })\n        );\n      })\n      .then((): void => {\n        this.isDeleted_ = true;\n        this.services_ = {};\n      });\n  }\n\n  /**\n   * Return a service instance associated with this app (creating it\n   * on demand), identified by the passed instanceIdentifier.\n   *\n   * NOTE: Currently storage is the only one that is leveraging this\n   * functionality. They invoke it by calling:\n   *\n   * ```javascript\n   * firebase.app().storage('STORAGE BUCKET ID')\n   * ```\n   *\n   * The service name is passed to this already\n   * @internal\n   */\n  _getService(\n    name: string,\n    instanceIdentifier: string = DEFAULT_ENTRY_NAME\n  ): FirebaseService {\n    this.checkDestroyed_();\n\n    if (!this.services_[name]) {\n      this.services_[name] = {};\n    }\n\n    if (!this.services_[name][instanceIdentifier]) {\n      /**\n       * If a custom instance has been defined (i.e. not '[DEFAULT]')\n       * then we will pass that instance on, otherwise we pass `null`\n       */\n      const instanceSpecifier =\n        instanceIdentifier !== DEFAULT_ENTRY_NAME\n          ? instanceIdentifier\n          : undefined;\n      const service = (this.firebase_ as _FirebaseNamespace).INTERNAL.factories[\n        name\n      ](this, this.extendApp.bind(this), instanceSpecifier);\n      this.services_[name][instanceIdentifier] = service;\n    }\n\n    return this.services_[name][instanceIdentifier];\n  }\n\n  /**\n   * Callback function used to extend an App instance at the time\n   * of service instance creation.\n   */\n  private extendApp(props: { [name: string]: any }): void {\n    // Copy the object onto the FirebaseAppImpl prototype\n    deepExtend(this, props);\n\n    /**\n     * If the app has overwritten the addAuthTokenListener stub, forward\n     * the active token listeners on to the true fxn.\n     *\n     * TODO: This function is required due to our current module\n     * structure. Once we are able to rely strictly upon a single module\n     * implementation, this code should be refactored and Auth should\n     * provide these stubs and the upgrade logic\n     */\n    if (props.INTERNAL && props.INTERNAL.addAuthTokenListener) {\n      tokenListeners.forEach(listener => {\n        this.INTERNAL.addAuthTokenListener(listener);\n      });\n      tokenListeners = [];\n    }\n  }\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  private checkDestroyed_(): void {\n    if (this.isDeleted_) {\n      error('app-deleted', { name: this.name_ });\n    }\n  }\n}\n\n// Prevent dead-code elimination of these methods w/o invalid property\n// copying.\n(FirebaseAppImpl.prototype.name && FirebaseAppImpl.prototype.options) ||\n  FirebaseAppImpl.prototype.delete ||\n  console.log('dc');\n\n/**\n * Return a firebase namespace object.\n *\n * In production, this will be called exactly once and the result\n * assigned to the 'firebase' global.  It may be called multiple times\n * in unit tests.\n */\nexport function createFirebaseNamespace(): FirebaseNamespace {\n  let apps_: { [name: string]: FirebaseApp } = {};\n  let factories: { [service: string]: FirebaseServiceFactory } = {};\n  let appHooks: { [service: string]: AppHook } = {};\n\n  // A namespace is a plain JavaScript Object.\n  let namespace = {\n    // Hack to prevent Babel from modifying the object returned\n    // as the firebase namespace.\n    __esModule: true,\n    initializeApp: initializeApp,\n    app: app as any,\n    apps: null as any,\n    Promise: Promise,\n    SDK_VERSION: '${JSCORE_VERSION}',\n    INTERNAL: {\n      registerService: registerService,\n      createFirebaseNamespace: createFirebaseNamespace,\n      extendNamespace: extendNamespace,\n      createSubscribe: createSubscribe,\n      ErrorFactory: ErrorFactory,\n      removeApp: removeApp,\n      factories: factories,\n      useAsService: useAsService,\n      Promise: Promise,\n      deepExtend: deepExtend\n    }\n  };\n\n  // Inject a circular default export to allow Babel users who were previously\n  // using:\n  //\n  //   import firebase from 'firebase';\n  //   which becomes: var firebase = require('firebase').default;\n  //\n  // instead of\n  //\n  //   import * as firebase from 'firebase';\n  //   which becomes: var firebase = require('firebase');\n  patchProperty(namespace, 'default', namespace);\n\n  // firebase.apps is a read-only getter.\n  Object.defineProperty(namespace, 'apps', {\n    get: getApps\n  });\n\n  /**\n   * Called by App.delete() - but before any services associated with the App\n   * are deleted.\n   */\n  function removeApp(name: string): void {\n    let app = apps_[name];\n    callAppHooks(app, 'delete');\n    delete apps_[name];\n  }\n\n  /**\n   * Get the App object for a given name (or DEFAULT).\n   */\n  function app(name?: string): FirebaseApp {\n    name = name || DEFAULT_ENTRY_NAME;\n    if (!contains(apps_, name)) {\n      error('no-app', { name: name });\n    }\n    return apps_[name];\n  }\n\n  patchProperty(app, 'App', FirebaseAppImpl);\n\n  /**\n   * Create a new App instance (name must be unique).\n   */\n  function initializeApp(options: FirebaseOptions, name?: string): FirebaseApp {\n    if (name === undefined) {\n      name = DEFAULT_ENTRY_NAME;\n    } else {\n      if (typeof name !== 'string' || name === '') {\n        error('bad-app-name', { name: name + '' });\n      }\n    }\n    if (contains(apps_, name)) {\n      error('duplicate-app', { name: name });\n    }\n\n    let app = new FirebaseAppImpl(\n      options,\n      name!,\n      namespace as FirebaseNamespace\n    );\n\n    apps_[name!] = app;\n    callAppHooks(app, 'create');\n\n    return app;\n  }\n\n  /*\n   * Return an array of all the non-deleted FirebaseApps.\n   */\n  function getApps(): FirebaseApp[] {\n    // Make a copy so caller cannot mutate the apps list.\n    return Object.keys(apps_).map(name => apps_[name]);\n  }\n\n  /*\n   * Register a Firebase Service.\n   *\n   * firebase.INTERNAL.registerService()\n   *\n   * TODO: Implement serviceProperties.\n   */\n  function registerService(\n    name: string,\n    createService: FirebaseServiceFactory,\n    serviceProperties?: { [prop: string]: any },\n    appHook?: AppHook,\n    allowMultipleInstances?: boolean\n  ): FirebaseServiceNamespace<FirebaseService> {\n    // Cannot re-register a service that already exists\n    if (factories[name]) {\n      error('duplicate-service', { name: name });\n    }\n\n    // Capture the service factory for later service instantiation\n    factories[name] = createService;\n\n    // Capture the appHook, if passed\n    if (appHook) {\n      appHooks[name] = appHook;\n\n      // Run the **new** app hook on all existing apps\n      getApps().forEach(app => {\n        appHook('create', app);\n      });\n    }\n\n    // The Service namespace is an accessor function ...\n    const serviceNamespace = (appArg: FirebaseApp = app()) => {\n      if (typeof (appArg as any)[name] !== 'function') {\n        // Invalid argument.\n        // This happens in the following case: firebase.storage('gs:/')\n        error('invalid-app-argument', { name: name });\n      }\n\n      // Forward service instance lookup to the FirebaseApp.\n      return (appArg as any)[name]();\n    };\n\n    // ... and a container for service-level properties.\n    if (serviceProperties !== undefined) {\n      deepExtend(serviceNamespace, serviceProperties);\n    }\n\n    // Monkey-patch the serviceNamespace onto the firebase namespace\n    (namespace as any)[name] = serviceNamespace;\n\n    // Patch the FirebaseAppImpl prototype\n    FirebaseAppImpl.prototype[name] = function(...args) {\n      const serviceFxn = this._getService.bind(this, name);\n      return serviceFxn.apply(this, allowMultipleInstances ? args : []);\n    };\n\n    return serviceNamespace;\n  }\n\n  /**\n   * Patch the top-level firebase namespace with additional properties.\n   *\n   * firebase.INTERNAL.extendNamespace()\n   */\n  function extendNamespace(props: { [prop: string]: any }): void {\n    deepExtend(namespace, props);\n  }\n\n  function callAppHooks(app: FirebaseApp, eventName: string) {\n    Object.keys(factories).forEach(serviceName => {\n      // Ignore virtual services\n      let factoryName = useAsService(app, serviceName);\n      if (factoryName === null) {\n        return;\n      }\n\n      if (appHooks[factoryName]) {\n        appHooks[factoryName](eventName, app);\n      }\n    });\n  }\n\n  // Map the requested service to a registered service name\n  // (used to map auth to serverAuth service when needed).\n  function useAsService(app: FirebaseApp, name: string): string | null {\n    if (name === 'serverAuth') {\n      return null;\n    }\n\n    let useService = name;\n    let options = app.options;\n\n    return useService;\n  }\n\n  return (namespace as any) as FirebaseNamespace;\n}\n\ntype AppError =\n  | 'no-app'\n  | 'bad-app-name'\n  | 'duplicate-app'\n  | 'app-deleted'\n  | 'duplicate-service'\n  | 'sa-not-supported'\n  | 'invalid-app-argument';\n\nfunction error(code: AppError, args?: { [name: string]: any }) {\n  throw appErrors.create(code, args);\n}\n\n// TypeScript does not support non-string indexes!\n// let errors: {[code: AppError: string} = {\nlet errors: { [code: string]: string } = {\n  'no-app':\n    \"No Firebase App '{$name}' has been created - \" +\n    'call Firebase App.initializeApp()',\n  'bad-app-name': \"Illegal App name: '{$name}\",\n  'duplicate-app': \"Firebase App named '{$name}' already exists\",\n  'app-deleted': \"Firebase App named '{$name}' already deleted\",\n  'duplicate-service': \"Firebase service named '{$name}' already registered\",\n  'sa-not-supported':\n    'Initializing the Firebase SDK with a service ' +\n    'account is only allowed in a Node.js environment. On client ' +\n    'devices, you should instead initialize the SDK with an api key and ' +\n    'auth domain',\n  'invalid-app-argument':\n    'firebase.{$name}() takes either no argument or a ' +\n    'Firebase App instance.'\n};\n\nlet appErrors = new ErrorFactory<AppError>('app', 'Firebase', errors);\n"],"preExistingComment":"firebaseApp.js.map"}